#!/usr/bin/nft -f
# ipv4/ipv6 Simple & Safe Firewall
# you can find examples in /usr/share/nftables/

flush ruleset

table inet filter {
  chain input {
    type filter hook input priority 0; policy drop

    # allow established/related connections
    ct state {established, related} accept

    # early drop of invalid connections
    ct state invalid drop

    # allow from loopback
    iifname lo accept

    # Drop connections to loopback not coming from loopback
		iif != lo ip daddr 127.0.0.1/8 drop

    # Drop connections to loopback not coming from loopback
		iif != lo ip6 daddr ::1/128 drop

    # allow icmp v4
    ip protocol icmp icmp type {destination-unreachable, router-solicitation, router-advertisement, time-exceeded, parameter-problem} accept

    # allow icmp v6
    meta l4proto ipv6-icmp icmpv6 type {destination-unreachable, packet-too-big, time-exceeded, parameter-problem, mld-listener-query, mld-listener-report, mld-listener-reduction, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert} accept

    # allow igmp
    ip protocol igmp accept

    # new udp traffic jump to UDP chain
    meta l4proto udp ct state new jump udp_chain

    # new tcp traffic jump to TCP chain
    meta l4proto tcp tcp flags & (fin|syn|rst|ack) == syn ct state new jump tcp_chain

    # everything else
    meta l4proto udp reject
    meta l4proto tcp reject with tcp reset
    reject with icmpx type port-unreachable
  }

  chain forward {
    type filter hook forward priority 0; policy drop;
  }

  chain output {
    type filter hook output priority 0; policy accept;
  }

  chain tcp_chain {
    meta l4proto tcp reject with tcp reset
  }

  chain udp_chain {
    meta l4proto udp reject
  }

}

# vim:set ts=2 sw=2 et:
