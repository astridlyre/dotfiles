# vim:filetype=sh

# Top disk usage
ducks() {
	du -sh ./* | sort -hr | head -11
}

# minimal editor without coc or vim-go
min() {
  vim -u "$HOME/.config/nvim/init_minimal.vim" "$@"
}

# quick make c file
mk() {
  local fname
  fname="$(ls -- *.c)"
  cc -o "${fname%.c}" "$PWD/$fname"
  "$PWD/${fname%.c}"
}

# Find a service port quickly
port() {
  grep --color=auto -E -i "^$1" /etc/services
}

p() {
  awk '{printf "%s\t", $2} {print $1}' /etc/services | grep -i --color=auto "^$1/"
}

# Easily edit script in PATH
es() {
  vim "$(which "$@")"
}

# Unlock my bitwarden session
bwinit() {
  local pw
  printf 'pw: '
  read -rs pw
  eval "$(bw unlock "$pw" | grep -Eo 'export BW_SESSION=.*')"
}

# Get a password
bwget() {
  bw get password "$1" | xsel -b
}

# Use fd instead of the default find
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

f() {
  local file
  file="$(fzf --preview 'batfile {}' --no-height --reverse --ansi)"
  [[ "$file" ]] && vim "$file"
}

m() {
  man -k . | fzf -q "$1" --prompt='man> ' --reverse \
      --preview $'echo {} | tr -d \'()\' | awk \'{printf "%s ", $2} {print $1}\' | xargs -r man' \
          | tr -d '()' | awk '{printf "%s ", $2} {print $1}' | xargs -r man
}
