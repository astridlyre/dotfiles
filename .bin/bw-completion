#!/usr/bin/env bash

# Return if not interactive
[[ $- != *i* ]] && return

# Base options for bw
_bw_opts="
  --pretty 
  --raw
  --response
  --quiet
  --nointeraction
  --session
  -v --version
  -h --help
"
# Base commands for bw
_bw_objs="
  login logout lock
  unlock sync generate
  encode config update
  completion status list
  get create edit
  delete restore share
  confirm import export
  send receive help
"

# Generic help options for simple commands
_bw_help_opts="
  -h --help
"
# Options for bw login
_bw_login_opts="
  --method
  --code
  --sso
  --apikey
  --passwordenv
  --passwordfile
  --check
  -h --help
"

_bw_login_method_objs="
1 2 3
"

# Options for bw unlock
_bw_unlock_opts="
  --raw
  --check
  -h --help
"
# Options for bw sync
_bw_sync_opts="
  -f --force
  --last
  -h --help
"
# Options for bw generate
_bw_generate_opts="
  -u --uppercase
  -l --lowercase
  -n --number
  -s --special
  -p --passphrase
  --length
  --words
  --separator
  -h --help
"
# Options for bw config
_bw_config_opts="
  --web-vault
  --api
  --identity
  --icons
  --notifications
  --events
  -h --help
"
# Objects for bw config
_bw_config_objs="
  server
"
# Options for bw completion
_bw_completion_opts="
  --shell
  -h --help
"
# Objects for bw completion
_bw_shell_objs="
  zsh bash
"
# Options for bw update
_bw_update_opts="
  --raw
  -h --help
"
# Options for bw list
_bw_list_opts="
  --search
  --url
  --folderid
  --collectionid
  --organizationid
  --trash
  -h --help
"
# Objects for bw list
_bw_list_objs="
  items folders collections
  organizations org-collections
  org-members
"
# Options for bw get
_bw_get_opts="
  --itemid
  --output
  --organizationid
  -h --help
"
# Objects for bw get
_bw_get_objs="
  item username password
  uri totp exposed
  attachment folder collection
  org-collection organization template
  fingerprint send email
"
# Options for bw create
_bw_create_opts="
  --file
  --itemid
  --organizationid
  -h --help
"
# Objects for bw create
_bw_create_objs="
  item attachment folder
  org-collection
"
# Options for bw edit
_bw_edit_opts="
  --organizationid
  -h --help
"
# Objects for bw edit
_bw_edit_objs="
  item item-collections
  folder org-collection
"
# Options for bw delete
_bw_delete_opts="
  --itemid
  --organizationid
  -p --permanent
  -h --help
"
# Objects for bw delete
_bw_delete_objs="
  item attachment folder
  org-collection
"
# Objects for bw restore
_bw_restore_objs="
  item
"
# Options for bw confirm
_bw_confirm_opts="
  --organizationid
  -h --help
"
# Objects for bw confirm
_bw_confirm_objs="
  org-member
"
# Options for bw import
_bw_import_opts="
  --formats
  -h --help
"
# Options for bw export
_bw_export_opts="
  --output
  --format
  --raw
  --organizationid
  -h --help
"
# Options for bw send
_bw_send_opts="
  -f --file
  -d --deleteInDays
  --hidden
  -n --name
  --notes
  --fullObject
  -h --help
"
# Objects for bw send
_bw_send_objs="
  list template get
  receive create edit
  remove-password delete
"
# Options for bw receive
_bw_receive_opts="
  --password
  --passwordenv
  --passwordfile
  --obj
  --output
  -h --help
"

function _bw() {
	local arguments commands current_word previous_word
	arguments="$_bw_opts"
	commands="$_bw_objs"

	current_word="$2" # Current word is the completion candidate
	previous_word="${COMP_WORDS[COMP_CWORD - 1]}"
	COMPREPLY=()

	# If base command, do base completion
	if [[ $previous_word == "bw" ]]; then
		if [[ $current_word =~ ^- ]]; then
			COMPREPLY=($(compgen -W "$arguments" -- "$current_word"))
			return 0
		else
			COMPREPLY=($(compgen -W "$commands $arguments" -- "$current_word"))
			return 0
		fi
	fi

	# Perform completion for first subcommand found
	local word command opts objs
	for word in "${COMP_WORDS[@]}"; do
		for command in $commands; do
			if [[ $word == "$command" ]]; then
				opts="_bw_${word}_opts"
				objs="_bw_${word}_objs"
				COMPREPLY=()
				if [[ $current_word =~ ^- ]] || [[ -z ${!objs} ]]; then
					COMPREPLY=($(compgen -W "${!opts}" -- "$current_word"))
					return 0
				else
					COMPREPLY=($(compgen -W "${!objs}" -- "$current_word"))
					return 0
				fi
				return 0
			fi
		done
	done
	return 1
}

complete -o default -F _bw bw
