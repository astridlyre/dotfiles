#!/bin/sh

# Launcher function
run() {
	if ! pgrep "$1"; then
		"$@" &
	fi
}

# Monitor Config
LAPTOP="eDP-1-1"
LAPTOP_SIZE=1920x1080
EXTERNAL2="HDMI-0"
EXTERNAL_SIZE2=3840x2160
EXTERNAL="DP-0"
EXTERNAL_SIZE=1920x1080

# Run a different xrandr depending on connected monitors
export MONITORS
if xrandr | grep "$EXTERNAL connected"; then # 1920 portable monitor
	MONITORS="$LAPTOP $EXTERNAL"
	# If I haz two monitors
	xrandr --output $EXTERNAL --mode $EXTERNAL_SIZE --pos 1920x0 --rotate normal \
		--output $LAPTOP --primary --mode $LAPTOP_SIZE --pos 0x0 --rotate normal
	bspc monitor $LAPTOP -d 1 2 3 4 5
	bspc monitor $EXTERNAL -d 6
elif xrandr | grep "${EXTERNAL2} connected"; then # HDMI 4k monitor
	MONITORS="$LAPTOP $EXTERNAL2"
	# If I haz two monitors
	xrandr --output $EXTERNAL2 --primary --mode $EXTERNAL_SIZE2 --pos 0x0 --rotate normal \
		--output $LAPTOP --mode $LAPTOP_SIZE --pos 3840x1080 --rotate normal
	bspc monitor $EXTERNAL2 -d 1 2 3 4 5
	bspc monitor $LAPTOP -d 6
else
	# If I haz still two monitors but should have one
	OTHER_MONS="$(bspc query -M --names | grep -v $LAPTOP)"
	if [ "$OTHER_MONS" ]; then
		for m in $OTHER_MONS; do
			bspc monitor "$m" -r
			xrandr --output "$m" --off
		done
		bspc wm -r
		# bspc wm -o
	fi
	MONITORS="$LAPTOP"
	# If i haz only one yay!
	xrandr --output $LAPTOP --primary --rotate normal --pos 0x0 --mode $LAPTOP_SIZE
	bspc monitor $LAPTOP -d 1 2 3 4 5 6
fi

nvidia-settings --load-config-only

# Launch polybar
run "$HOME/.config/polybar/launch.sh"

# Start hotkey daemon
run sxhkd -c ~/.config/bspwm/sxhkd/sxhkdrc

# notification daemon
run /usr/lib/xfce4/notifyd/xfce4-notifyd

# compositor
#run picom --experimental-backends --config "$HOME/.config/bspwm/picom.conf"

# Start unclutter to hide cursor
run unclutter --timeout 1

# cursor fix
run xsetroot -cursor_name left_ptr

# Turn off key repeat
run xset r r off

# Map capslock to esc & ctrl
run setxkbmap -option ctrl:nocaps

# Applets
run numlockx on

# Configure no border gaps
bspc config border_width 1
bspc config window_gap 0
bspc config top_padding 18
bspc config bottom_padding 0
bspc config left_padding 0
bspc config right_padding 0

#BSPWM configuration
bspc config single_monocle false
bspc config split_ratio 0.50
bspc config borderless_monocle true
bspc config gapless_monocle true
bspc config focus_follows_pointer true
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner
bspc config remove_disabled_monitors true
bspc config merge_overlapping_monitors true

#BSPWM coloring
bspc config normal_border_color "#282828"
bspc config active_border_color "#282828"
bspc config focused_border_color "#c6c6c6"
bspc config presel_feedback_color "#282828"

bspc rule -a '*' rectangle="640x360+0+0" center=true

#Floating applications
bspc rule -a iwctl rectangle="800x480+0+0" center=true state=floating
bspc rule -a l33th4x0rz state=floating
bspc rule -a feh state=floating
bspc rule -a Blueberry.py state=floating rectangle="640x480+0+0" center=true
bspc rule -a Pavucontrol state=floating rectangle="640x480+0+0" center=true
bspc rule -a floating-term state=floating rectangle="1000x400+460+50" center=false

#Tiled applications
bspc rule -a mpv state=tiled
bspc rule -a Xfce4-settings-manager state=tiled
bspc rule -a Zathura state=tiled
bspc rule -a Emacs state=tiled

#open applications on specific workspaces
bspc rule -a Gimp desktop='^5' state=tiled
bspc rule -a OBS desktop='^6' state=tiled

hsetroot -solid "#000000"
